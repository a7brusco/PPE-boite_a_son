# Generated by Django 3.1.7 on 2021-06-12 09:13

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import samples.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Background',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(null=True, upload_to='backgrounds/')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('color', models.CharField(max_length=11)),
                ('image', models.FileField(blank=True, null=True, upload_to='icons/tags')),
            ],
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=datetime.datetime(2021, 6, 12, 9, 13, 31, 341697, tzinfo=utc))),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to=samples.models.user_directory_path, validators=[samples.models.validate_sample_extension])),
                ('isRecent', models.BooleanField(default=True)),
                ('isMacro', models.BooleanField(default=False)),
                ('isPublic', models.BooleanField(default=False, verbose_name='Public ? ')),
                ('background', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.background')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('favMusicSoftware', models.CharField(blank=True, max_length=30)),
                ('musicStyle', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, default='no-profile-pic.png', null=True, upload_to='profiles/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Kit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampleList', models.ManyToManyField(to='samples.Sample')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(default=datetime.datetime(2021, 6, 12, 9, 13, 31, 342724, tzinfo=utc))),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('isRecent', models.BooleanField(default=True)),
                ('isPublic', models.BooleanField(default=False, verbose_name='Public Collection ? ')),
                ('image', models.ImageField(blank=True, null=True, upload_to='collections/')),
                ('samples', models.ManyToManyField(to='samples.Sample')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorCollection', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(related_name='userCollection', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
